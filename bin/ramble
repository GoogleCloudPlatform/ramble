#!/bin/sh
# Copyright 2022-2024 The Ramble Authors
#
# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
# https://www.apache.org/licenses/LICENSE-2.0> or the MIT license
# <LICENSE-MIT or https://opensource.org/licenses/MIT>, at your
# option. This file may not be copied, modified, or distributed
# except according to those terms.
# top-level COPYRIGHT file for details.
#
# SPDX-License-Identifier: (Apache-2.0 OR MIT)

# This file is bilingual. The following shell code finds our preferred python.
# Following line is a shell no-op, and starts a multi-line Python comment.
# See https://stackoverflow.com/a/47886254
""":"
# prefer python3, then python, then python2
for cmd in python3 python python2; do
   command -v > /dev/null $cmd && exec $cmd $0 "$@"
done

echo "==> Error: ramble could not find a python interpreter!" >&2
exit 1
":"""
# Line above is a shell no-op, and ends a python multi-line comment.
# The code above runs this file with our preferred python interpreter.

from __future__ import print_function

import os
import sys

if sys.version_info[:2] < (2, 6):
    v_info = sys.version_info[:3]
    sys.exit("Ramble requires Python 2.6 or higher." "This is Python %d.%d.%d." % v_info)

# Find ramble's location and its prefix.
ramble_file = os.path.realpath(os.path.expanduser(__file__))
ramble_prefix = os.path.dirname(os.path.dirname(ramble_file))

# Allow ramble libs to be imported in our scripts
ramble_lib_path = os.path.join(ramble_prefix, "lib", "ramble")
sys.path.insert(0, ramble_lib_path)

# Add external libs
ramble_external_libs = os.path.join(ramble_lib_path, "external")

if sys.version_info[:2] == (2, 6):
    sys.path.insert(0, os.path.join(ramble_external_libs, "py26"))

sys.path.insert(0, ramble_external_libs)

# Here we delete ruamel.yaml in case it has been already imported from site
# (see #9206 for a broader description of the issue).
#
# Briefly: ruamel.yaml produces a .pth file when installed with pip that
# makes the site installed package the preferred one, even though sys.path
# is modified to point to another version of ruamel.yaml.
if "ruamel.yaml" in sys.modules:
    del sys.modules["ruamel.yaml"]

if "ruamel" in sys.modules:
    del sys.modules["ruamel"]

import ramble.main  # noqa

# Once we've set up the system path, run the ramble main method
if __name__ == "__main__":
    sys.exit(ramble.main.main())
